cmake_minimum_required(VERSION 3.5)
project(ips)

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic -Wno-unknown-pragmas)
endif()


find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(cpm_tools REQUIRED)
find_package(cpm_msgs REQUIRED)
find_package(OpenCV 3.3.1 EXACT REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
find_package (Threads)

find_package(PkgConfig)
pkg_search_module(apriltag REQUIRED apriltag)


set(PYLON_ROOT /opt/pylon5)
include_directories(${PYLON_ROOT}/include)
#link_directories(${PYLON_ROOT}/lib64)


include_directories(/usr/local/include)
include_directories(src)





# SET(${PROJECT_NAME}_LIB_SOURCES
#     src/AprilTagDetector/AprilTagDetector.cpp
#     src/AprilTagDetector/AprilTagDetector.hpp
#     src/CameraParameters/CameraParameters.cpp
#     src/CameraParameters/CameraParameters.hpp
#     src/DetectionDispatcherLogic/DetectionDispatcherLogic.cpp
#     src/DetectionDispatcherLogic/DetectionDispatcherLogic.hpp
#     src/CameraWrapper/CameraWrapper.cpp
#     src/CameraWrapper/CameraWrapper.hpp
# )


# add_library(${PROJECT_NAME}_lib STATIC ${${PROJECT_NAME}_LIB_SOURCES})
# #target_link_libraries(${PROJECT_NAME}_lib yaml-cpp apriltag rclcpp std_msgs cpm_tools cpm_msgs ${OpenCV_LIBRARIES})
# ament_target_dependencies(${PROJECT_NAME}_lib rclcpp cpm_tools cpm_msgs)


add_executable(${PROJECT_NAME}_unittest
    src/tools/unittest/main.cpp
    src/AprilTagDetector/AprilTagDetector_unittest.cpp
    src/CameraParameters/CameraParameters_unittest.cpp
    src/DetectionDispatcherLogic/DetectionDispatcherLogic_unittest.cpp

    src/AprilTagDetector/AprilTagDetector.cpp
    src/AprilTagDetector/AprilTagDetector.hpp
    src/CameraParameters/CameraParameters.cpp
    src/CameraParameters/CameraParameters.hpp
    src/DetectionDispatcherLogic/DetectionDispatcherLogic.cpp
    src/DetectionDispatcherLogic/DetectionDispatcherLogic.hpp
    src/CameraWrapper/CameraWrapper.cpp
    src/CameraWrapper/CameraWrapper.hpp
)
#ament_target_dependencies(${PROJECT_NAME}_unittest rclcpp cpm_tools cpm_msgs)

#get_cmake_property(_variableNames VARIABLES)
#foreach (_variableName ${_variableNames})
#    message(STATUS "${_variableName}=${${_variableName}}")
#endforeach()


target_link_libraries(${PROJECT_NAME}_unittest yaml-cpp apriltag rclcpp std_msgs cpm_tools cpm_msgs ${OpenCV_LIBRARIES})
#target_link_libraries(${PROJECT_NAME}_unittest ${PROJECT_NAME}_lib)



# add_executable(talker src/talker.cpp)
# ament_target_dependencies(talker rclcpp std_msgs cpm_tools cpm_msgs)

# add_executable(listener src/listener.cpp)
# ament_target_dependencies(listener rclcpp std_msgs cpm_tools cpm_msgs)

# add_executable(timer_test src/timer_test.cpp)
# ament_target_dependencies(timer_test rclcpp std_msgs cpm_tools)

install(TARGETS
    #talker
    ${PROJECT_NAME}_unittest
    DESTINATION lib/${PROJECT_NAME}
)

ament_package()
