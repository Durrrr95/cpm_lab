image: ubuntu:18.04

stages:
  - build_nosim

before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

build_nosim:
  stage: build_nosim
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y tzdata
    - apt-get install -y sudo
    - adduser --disabled-password --gecos '' docker
    - adduser docker sudo
    - echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    - ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime
    - dpkg-reconfigure --frontend noninteractive tzdata
    - chmod +x setup_cpm_build_environment.sh
    - echo $RTI_LICENSE_KEY > /license.dat
    - ls -alh
    - cat /license.dat
    - sudo ls -alh
    - ls -alh /opt
    - sudo ./setup_cpm_build_environment.sh --license_path=/license.dat --domain_id=100 --simulation
    - ./build_all.bash --simulation
