% MIT License
% 
% Copyright (c) 2020 Lehrstuhl Informatik 11 - RWTH Aachen University
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "Software"), to deal
% in the Software without restriction, including without limitation the rights
% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
% copies of the Software, and to permit persons to whom the Software is
% furnished to do so, subject to the following conditions:
% 
% The above copyright notice and this permission notice shall be included in all
% copies or substantial portions of the Software.
% 
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.
% 
% This file is part of cpm_lab.
% 
% Author: i11 - Embedded Software, RWTH Aachen University


data = [ ... % Time(minutes), voltage
                  0       8.17 ; ... 
                 20       8.05 ; ...
                 40       7.97 ; ...
                 60       7.82 ; ...
                 80       7.72 ; ... 
                101       7.64 ; ... 
                120       7.56 ; ...
                140       7.48 ; ...
                150       7.46 ; ... 
                160       7.42 ; ... % entry
                170       7.41 ; ... 
                180       7.39 ; ...
                190       7.37 ; ...
                200       7.36 ; ...
                210       7.36 ; ...
                220       7.35 ; ...
                230       7.35 ; ...
                240       7.35 ; ...
                260       7.32 ; ...
                280       7.27 ; ...
                300       7.18 ; ...
                310       7.07 ; ...
                320       6.93 ; ...
                323       6.88 ; ...
                326       6.85 ; ...
                329       6.80 ; ...
                332       6.72 ; ...
                335       6.62 ; ...
                337       6.53 ; ...
                339       6.45 ; ...
                340       6.37 ; ...
                341       6.29 ; ...
                342       6.28
];

figure
hold on
tmax = max(data(:,1));
plot(data(:,2), abs(data(:,1)-tmax)/tmax*100)
u = 6:0.05:8.5;
plot(u, arrayfun(@(u) calc_battery_level(u), u))
hold off
xlabel('Voltage [V]','FontSize',20)
ylabel('Battery level [%]','FontSize',20)
print('u-level.png','-dpng')


function battery_level = calc_battery_level(u)
    u1 = 8.17;
    l1 = 100;    
    u2 = 7.38;
    l2 = 50;
    u3 = 7.3;
    l3 = 12;
    u4 = 6.3;
    l4 = 0;

    if u >= u2 
        battery_level = min(100, l2 + (l1-l2)/(u1-u2) * (u-u2));
    elseif u > u3
        battery_level = l3 + (l2-l3)/(u2-u3) * (u-u3);
    else
        battery_level = max(0, l4 + (l3-l4)/(u3-u4) * (u-u4));
    end
end